# -*- coding: utf-8 -*-
"""EDA Student Performance EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CoIM3bJvwR-FX0xS5UxmF7D0M4qsHEED

EDA Student Performance Indicator

1) Problem statement
This project understands how the student's performance (test scores) is affected by other variables such as Gender, Ethnicity, Parental level of education, Lunch and Test preparation course.


2) Data Collection
Dataset Source - https://www.kaggle.com/datasets/spscientist students-performance-in-exams?datasetId=74977
The data consists of 8 column and 1000 rows.

Dataset Information

gender : sex of students -> (Male/female)

race/ethnicity : ethnicity of students -> (Group A, B,C, D,E)

parental level of education : parents' final education ->(bachelor's degree,some college,master's degree,associate's degree,high school)

lunch : having lunch before test (standard or free/reduced)

test preparation course : complete or not complete before test

math score

reading score

writing score
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline
import warnings
warnings.filterwarnings('ignore')

#reading the Dataset

df=pd.read_csv("/content/sample_data/StudentsPerformance.csv")

df.head()

df.shape

df.size

df.info()

df.describe()

# Some of the major EDA steps to perform

"""Checking Missing Values
Check Duplicates
Check the datatype
Check the number of unique values of each columns
check the statistics of dataset
check various categories present in the different categorical column"""

#check missing values

df.isnull().sum()

df.isna().sum()

#checking duplicates

df.duplicated().sum()

## check datatypes
df.info()

##Checking the number of uniques values of each columns


df.nunique()

## Check the statistics of the dataset


df.describe()

"""Insights or Observation

From the above description of numerical data,all means are very close to each other- between 66 and 69

All the standard deviation are also close- between 14.6- 15.19

While there is a minimum of 0 for maths,other are having 17 and 10 value"""

[feature for feature in df.columns if df[feature].dtype=='O']

#segrregate numerical and categorical features


numerical_features=[feature for feature in df.columns if df[feature].dtype!='O']
categorical_feature=[feature for feature in df.columns if df[feature].dtype=='O']

numerical_features

categorical_feature

#finding the total score and average score of the data

df['total_score']=(df['math score']+df['reading score']+df['writing score'])

df["total_score"]   #got total score of every student

df["average"]=df["total_score"]/3

df["average"] #got the average score of every student

df.head()

# visualization

fig,axis=plt.subplots(1,2,figsize=(15,7))
plt.subplot(121)
sns.histplot(data=df,x='average',bins=30,kde=True,color='r')
plt.subplot(122)
sns.histplot(data=df,x='average',bins=30,kde=True,hue='gender')
plt.show()

plt.subplots(1,3,figsize=(25,6))
plt.subplot(141)
sns.histplot(data=df,x='average',kde=True,hue='lunch')
plt.subplot(142)
sns.histplot(data=df[df.gender=='female'],x='average',kde=True,hue='lunch')
plt.subplot(143)
sns.histplot(data=df[df.gender=='male'],x='average',kde=True,hue='lunch')
plt.show()

"""Standard Lunch help students perform well in exams
Standard lunch helps perform well in exams be it a male of female"""

plt.subplots(1,3,figsize=(25,6))
plt.subplot(141)
ax=sns.histplot(data=df,x='average',kde=True,hue='parental level of education')
plt.subplot(142)
ax=sns.histplot(data=df[df.gender=='male'],x='average',kde=True,hue='parental level of education')
plt.subplot(143)
ax=sns.histplot(data=df[df.gender=='female'],x='average',kde=True,hue='parental level of education')
plt.show()

sns.pairplot(df)

