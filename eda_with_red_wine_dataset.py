# -*- coding: utf-8 -*-
"""EDA with Red Wine Dataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WJUcoloRkzcQpPVO4K-B1dD_ieQcLaUI

Data Set Information:

The two datasets are related to red and white variants of the Portuguese "Vinho Verde" wine.

Due to privacy and logistic issues, only physicochemical (inputs) and sensory (the output) variables are available (e.g. there is no data about grape types, wine brand, wine selling price, etc.).

These datasets can be viewed as classification or regression tasks. The classes are ordered and not balanced (e.g. there are many more normal wines than excellent or poor ones).

Outlier detection algorithms could be used to detect the few excellent or poor wines. Also, we are not sure if all input variables are relevant. So it could be interesting to test feature selection methods.

Attribute Information:

Input variables (based on physicochemical tests):

1 - fixed acidity

2 - volatile acidity

3 - citric acid

4 - residual sugar

5 - chlorides

6 - free sulfur dioxide

7 - total sulfur dioxide

8 - density

9 - pH

10 - sulphates

11 - alcohol

Output variable (based on sensory data):

12 - quality (score between 0 and 10)
"""

#EDA with Red Wine Data

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df=pd.read_csv("/content/sample_data/winequality-red.csv")
df.head(5)

#summary of DataSet

df.info()

#descriptive summary of the dataset

df.describe()

## shape of the data

df.shape

## List down all the columns names

df.columns

df['quality'].unique()  #unique values within a particular columns

df.nunique() # unique values of all values from the dataset

# missing values within the values

df.isnull().sum()

# checking the Duplicate records

df.duplicated()

# checking the Duplicate records within the dataframe

df[df.duplicated()]

#remove the duplicate data if any


df.drop_duplicates(inplace=True)

df.shape

## Correlation

df.corr()

#correlation in the form of graph

sns.heatmap(df.corr())

plt.figure(figsize=(10,6))
sns.heatmap(df.corr(),annot=True)

## Visualization
#conclusion - It is a imbalance dataset

df.quality.value_counts()

df.quality.value_counts().plot(kind="bar")
plt.xlabel("Wine Quality")
plt.ylabel("Count")
plt.show()

for column in df.columns:                #distribution for each and every dataset
  sns.histplot(df[column],kde=True)

sns.histplot(df["alcohol"])

#univariate,bivariate,multivariate analysis
sns.pairplot(df) #comparing one feature with other feature

#Categorical Plot

sns.catplot(x="quality",y="alcohol",data=df,kind="box")

#ScatterPlot - numerical features

sns.scatterplot(x="alcohol",y="pH",hue="quality",data=df)

